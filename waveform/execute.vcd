$date
	Sat Oct 04 14:20:47 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 32 ! es_o_alu_value [31:0] $end
$var wire 1 " es_o_ce $end
$var wire 6 # es_o_funct [5:0] $end
$var wire 6 $ es_o_opcode [5:0] $end
$var wire 1 % es_o_zero $end
$var reg 1 & es_clk $end
$var reg 6 ' es_i_alu_funct [5:0] $end
$var reg 6 ( es_i_alu_op [5:0] $end
$var reg 1 ) es_i_alu_src $end
$var reg 1 * es_i_ce $end
$var reg 32 + es_i_data_rs [31:0] $end
$var reg 32 , es_i_data_rt [31:0] $end
$var reg 16 - es_i_imm [15:0] $end
$var reg 1 . es_rst $end
$scope module es $end
$var wire 32 / alu_value [31:0] $end
$var wire 1 0 done $end
$var wire 1 1 es_clk $end
$var wire 6 2 es_i_alu_funct [5:0] $end
$var wire 6 3 es_i_alu_op [5:0] $end
$var wire 1 4 es_i_alu_src $end
$var wire 1 5 es_i_ce $end
$var wire 32 6 es_i_data_rs [31:0] $end
$var wire 32 7 es_i_data_rt [31:0] $end
$var wire 16 8 es_i_imm [15:0] $end
$var wire 32 9 es_imm [31:0] $end
$var wire 32 : es_o_data_2 [31:0] $end
$var wire 1 ; es_rst $end
$var reg 4 < alu_control [3:0] $end
$var reg 32 = es_o_alu_value [31:0] $end
$var reg 1 > es_o_ce $end
$var reg 6 ? es_o_funct [5:0] $end
$var reg 6 @ es_o_opcode [5:0] $end
$var reg 1 A es_o_zero $end
$scope module a $end
$var wire 32 B a_i_data_rs [31:0] $end
$var wire 32 C a_i_data_rt [31:0] $end
$var wire 4 D a_i_funct [3:0] $end
$var wire 1 E funct_add $end
$var wire 1 F funct_addu $end
$var wire 1 G funct_and $end
$var wire 1 H funct_eq $end
$var wire 1 I funct_ge $end
$var wire 1 J funct_geu $end
$var wire 1 K funct_neq $end
$var wire 1 L funct_or $end
$var wire 1 M funct_sll $end
$var wire 1 N funct_slt $end
$var wire 1 O funct_sltu $end
$var wire 1 P funct_sra $end
$var wire 1 Q funct_srl $end
$var wire 1 R funct_sub $end
$var wire 1 S funct_xor $end
$var reg 32 T alu_value [31:0] $end
$var reg 1 U done $end
$upscope $end
$upscope $end
$scope task reset $end
$var integer 32 V counter [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10 V
1U
b0 T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
1E
b0 D
b0 C
b0 B
0A
b0 @
b0 ?
0>
b0 =
b0 <
0;
b0 :
b0 9
b0 8
b0 7
b0 6
05
04
b0 3
b0 2
01
10
b0 /
0.
b0 -
b0 ,
b0 +
0*
0)
b0 (
b0 '
0&
0%
b0 $
b0 #
0"
b0 !
$end
#5
1&
11
#10
0&
01
#15
1.
1;
1&
11
#20
0&
01
#25
1A
1%
0>
0"
b100000 ?
b100000 #
b100 :
b100 C
b1001 T
b1001 /
1U
10
b100000 '
b100000 2
b100 ,
b100 7
b101 +
b101 6
b101 B
1*
15
1&
11
#30
0&
01
#35
0A
0%
0>
0"
b100001 ?
b100001 #
b1001 =
b1001 !
1U
10
b1 T
b1 /
b1 <
b1 D
0E
1R
b100001 '
b100001 2
1&
11
#40
0&
01
#45
0>
0"
b100010 ?
b100010 #
b1 =
b1 !
1U
10
b100 T
b100 /
1G
b10 <
b10 D
0E
0R
b100010 '
b100010 2
1&
11
#50
0&
01
#55
0>
0"
b100011 ?
b100011 #
b100 =
b100 !
1U
10
b101 T
b101 /
1L
b11 <
b11 D
0E
0G
b100011 '
b100011 2
1&
11
#60
0&
01
#65
0>
0"
b100100 ?
b100100 #
b101 =
b101 !
1U
10
b1 T
b1 /
1S
b100 <
b100 D
0E
0L
b100100 '
b100100 2
1&
11
#70
0&
01
#75
0>
0"
b1 =
b1 !
1&
11
#80
0&
01
#85
0>
0"
1&
11
#90
0&
01
#95
0>
0"
1&
11
